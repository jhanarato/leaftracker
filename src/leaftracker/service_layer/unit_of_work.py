from typing import Protocol, Self

from leaftracker.domain.model import SourceOfStock, Species, Batch


class SourceOfStockRepository(Protocol):
    def add(self, source: SourceOfStock): ...

    def get(self, reference: str) -> SourceOfStock | None: ...


class SpeciesRepository(Protocol):
    def add(self, species: Species): ...

    def get(self, reference: str) -> Species | None: ...


class BatchRepository(Protocol):
    def add(self, batch: Batch): ...

    def get(self, reference: str) -> Batch | None: ...


class UnitOfWork(Protocol):
    def __enter__(self) -> Self: ...

    def __exit__(self, *args): ...

    def commit(self) -> None: ...

    def rollback(self) -> None: ...

    def batches(self) -> BatchRepository: ...

    def sources(self) -> SourceOfStockRepository: ...

    def species(self) -> SpeciesRepository: ...
